---
import type { Place, Locale, MapaProps as Props } from "../types/maps";

type LatLng = { lat: number; lng: number };

const POI_LABELS: Record<string, Partial<Record<Locale, string>>> = {
  micro: {
    es: "Microcentro de la Ciudad de San Juan",
    en: "San Juan City Center",
  },
  aerop: {
    es: "Aeropuerto Internacional Domingo F. Sarmiento",
    en: "Domingo F. Sarmiento International Airport",
  },
  terminal: { es: "Terminal de ómnibus", en: "Bus Terminal" },
  estadio: {
    es: "Estadio San Juan del Bicentenario",
    en: "San Juan Bicentennial Stadium",
  },
  velod: {
    es: "Velódromo Vicente A. Chancay",
    en: "Vicente A. Chancay Velodrome",
  },
  villicum: { es: "Autódromo El Villicum", en: "El Villicum Racetrack" },
  zonda: {
    es: "Autódromo Eduardo Copello “El Zonda”",
    en: "Eduardo Copello “El Zonda” Racetrack",
  },
  punta: { es: "Dique Punta Negra", en: "Punta Negra Dam" },
  ullum: { es: "Dique de Ullum", en: "Ullum Dam" },
  difunta: { es: "Paraje Difunta Correa", en: "Difunta Correa Shrine" },
  leoncito: {
    es: "Parque Nacional El Leoncito",
    en: "El Leoncito National Park",
  },
  ischi: {
    es: "Parque Prov. Ischigualasto (Valle de la Luna)",
    en: "Ischigualasto Provincial Park (Valley of the Moon)",
  },
  agua: { es: "Paso de Agua Negra a Chile", en: "Agua Negra Pass to Chile" },
  libert: {
    es: "Paso Los Libertadores a Chile",
    en: "Los Libertadores Pass to Chile",
  },
};

const {
  brandColor = "#242912",
  alto = 480,
  useRouting = true,
  fijo = "Martin Güemes 4178 este, Rawson, San Juan, Argentina",
  lugares = [
    {
      id: "micro",
      name: "Microcentro de la Ciudad de San Juan",
      labels: {
        es: "Microcentro de la Ciudad de San Juan",
        en: "San Juan City Center",
      },
      query: "Microcentro San Juan, Argentina",
      lat: -31.53694,
      lng: -68.525,
    },
    {
      id: "aerop",
      name: "Aeropuerto Internacional Domingo Faustino Sarmiento",
      labels: {
        es: "Aeropuerto Internacional Domingo F. Sarmiento",
        en: "Domingo F. Sarmiento International Airport",
      },
      query: "Aeropuerto Domingo Faustino Sarmiento, San Juan",
      lat: -31.57139,
      lng: -68.41806,
    },
    {
      id: "terminal",
      name: "Terminal de ómnibus",
      labels: { es: "Terminal de ómnibus", en: "Bus Terminal" },
      query: "Terminal de ómnibus San Juan, Argentina",
      lat: -31.539318,
      lng: -68.511205,
    },
    {
      id: "estadio",
      name: "Estadio San Juan Del Bicentenario",
      labels: {
        es: "Estadio San Juan del Bicentenario",
        en: "San Juan Bicentennial Stadium",
      },
      query: "Estadio San Juan del Bicentenario",
      lat: -31.611946,
      lng: -68.527479,
    },
    {
      id: "velod",
      name: "Velódromo Vicente Alejo Chancay",
      labels: {
        es: "Velódromo Vicente A. Chancay",
        en: "Vicente A. Chancay Velodrome",
      },
      query: "Velódromo Vicente Alejo Chancay, San Juan",
      lat: -31.6095,
      lng: -68.523,
    },
    {
      id: "villicum",
      name: "Autódromo El Villicum",
      labels: { es: "Autódromo El Villicum", en: "El Villicum Racetrack" },
      query: "Autódromo El Villicum, San Juan",
      lat: -31.39714,
      lng: -68.56079,
    },
    {
      id: "zonda",
      name: "Autódromo Eduardo Copello “El Zonda”",
      labels: {
        es: "Autódromo Eduardo Copello “El Zonda”",
        en: "Eduardo Copello “El Zonda” Racetrack",
      },
      query: "Autódromo El Zonda, San Juan",
      lat: -31.553972,
      lng: -68.694306,
    },
    {
      id: "punta",
      name: "Dique Punta Negra",
      labels: { es: "Dique Punta Negra", en: "Punta Negra Dam" },
      query: "Dique Punta Negra, San Juan",
      lat: -31.5045,
      lng: -68.7845,
    },
    {
      id: "ullum",
      name: "Dique de Ullum",
      labels: { es: "Dique de Ullum", en: "Ullum Dam" },
      query: "Dique de Ullum, San Juan",
      lat: -31.474769,
      lng: -68.649806,
    },
    {
      id: "difunta",
      name: "Paraje Difunta Correa",
      labels: { es: "Paraje Difunta Correa", en: "Difunta Correa Shrine" },
      query: "Difunta Correa, San Juan",
      lat: -31.73507,
      lng: -67.9805,
    },
    {
      id: "leoncito",
      name: "Parque Nacional El Leoncito",
      labels: {
        es: "Parque Nacional El Leoncito",
        en: "El Leoncito National Park",
      },
      query: "Parque Nacional El Leoncito, San Juan",
      lat: -31.798527,
      lng: -69.295583,
    },
    {
      id: "ischi",
      name: "Parque Prov. Ischigualasto (Valle de la Luna)",
      labels: {
        es: "Parque Prov. Ischigualasto (Valle de la Luna)",
        en: "Ischigualasto Provincial Park (Valley of the Moon)",
      },
      query: "Parque Provincial Ischigualasto",
      lat: -30.163044,
      lng: -67.842792,
    },
    {
      id: "agua",
      name: "Paso de Agua Negra a Chile",
      labels: {
        es: "Paso de Agua Negra a Chile",
        en: "Agua Negra Pass to Chile",
      },
      query: "Paso de Agua Negra",
      lat: -30.192222,
      lng: -69.818333,
    },
    {
      id: "libert",
      name: "Paso Los Libertadores a Chile",
      labels: {
        es: "Paso Los Libertadores a Chile",
        en: "Los Libertadores Pass to Chile",
      },
      query: "Paso Los Libertadores",
      lat: -32.82724,
      lng: -70.09213,
    },
  ],
  locale = "es",
  i18n = {},
} = Astro.props as Props;

const T = {
  es: {
    title: "Ubicación",
    subtitle: "Tocá los botones para ver puntos de interes",
    base: "Finca Casiana",
    minApprox: "min aprox.",
    kmStraight: "km en línea recta",
    acceptLang: "es",
  },
  en: {
    title: "Location",
    subtitle: "Tap the buttons to see points of interest",
    base: "Base point",
    minApprox: "min approx.",
    kmStraight: "km as the crow flies",
    acceptLang: "en",
  },
} as const;

const TITLE = i18n.title ?? T[locale].title;
const mapId = `leaflet-${Math.random().toString(36).slice(2)}`;
---

<link
  rel="stylesheet"
  href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
  integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
  crossorigin="anonymous"
/>

<h3 class="text-4xl text-center font-semibold text-stone-900">{TITLE}</h3>
<div
  class="mx-auto mt-2 h-1 w-16 rounded-full mb-5"
  style="background:#C76B4E;"
>
</div>

<!-- Layout: mobile = solo mapa; desktop = sidebar + mapa -->
<div
  class="poi-layout w-full mx-auto"
  style={`--alto:${alto}px; --brand:${brandColor}`}
>
  <!-- Desktop: Sidebar izquierda -->
  <aside class="poi-sidebar hidden md:flex md:flex-col">
    <div class="poi-header">
      <input
        class="poi-search"
        type="search"
        placeholder="Buscar…"
        aria-label="Buscar punto"
      />
    </div>
    <div class="botonera poi-list" style={`--brand:${brandColor}`}>
      {
        lugares.map((l) => (
          <button
            class="chip"
            data-id={l.id}
            aria-pressed="false"
            title={l.labels?.[locale] ?? l.name}
          >
            {l.labels?.[locale] ?? l.name}
          </button>
        ))
      }
    </div>
  </aside>

  <!-- Mapa (derecha en desktop) -->
  <div class="map-wrap isolate">
    <div id={mapId} class="map"></div>

    <!-- Mobile: botón + overlay -->
    <button class="poi-btn md:hidden">Puntos de interés</button>

    <aside id="poi-panel" class="poi-panel md:hidden" aria-hidden="true">
      <div class="panel-inner">
        <div class="poi-header">
          <input
            class="poi-search"
            type="search"
            placeholder="Buscar…"
            aria-label="Buscar punto"
          />
          <button class="poi-close" aria-label="Cerrar">&times;</button>
        </div>
        <div class="botonera poi-list" style={`--brand:${brandColor}`}>
          {
            lugares.map((l) => (
              <button
                class="chip"
                data-id={l.id}
                aria-pressed="false"
                title={l.name}
              >
                {l.name}
              </button>
            ))
          }
        </div>
      </div>
    </aside>
  </div>
</div>

<small class="osm-credit" style="color:#ECE3D1 !important; "
  >Mapa: © OpenStreetMap contributors</small
>

<script
  type="module"
  define:vars={{
    mapId,
    fijo,
    lugares,
    brandColor,
    useRouting,
    locale,
    dict: {
      base: T[locale].base,
      minApprox: T[locale].minApprox,
      kmStraight: T[locale].kmStraight,
      acceptLang: T[locale].acceptLang,
    },
  }}
>
  import * as L from "https://unpkg.com/leaflet@1.9.4/dist/leaflet-src.esm.js";

  /** @type {import('leaflet').Map} */ let map;
  /** @type {{lat:number,lng:number}} */ let base;

  /** Marcadores activos por id */
  const markers = new Map(); // Map<string, L.Marker>

  /** Capas (rutas / líneas) por id */
  /** @type {Map<string, import('leaflet').Layer>} */
  const layers = new Map();

  /** Grupo que reúne TODAS las rutas/líneas para calcular bounds de una */
  const routesGroup = L.featureGroup();

  const INITIAL_ZOOM = 12;

  const norm = (s) =>
    String(s).normalize("NFD").replace(/[\u0300-\u036f]/g, "").replace(/\s+/g, " ").trim();

  function fromCacheSmart(q) {
    try {
      const v = localStorage.getItem("geo:" + norm(q));
      return v ? JSON.parse(v) : null;
    } catch {
      return null;
    }
  }

  async function geocodeSmart(q) {
    try {
      if (q && typeof q === "object" && "lat" in q && "lng" in q) return q;
      const baseStr = String(q).trim();
      const withCity = `${baseStr}, Rawson, San Juan, Argentina`;
      const variants = [
        baseStr,
        withCity,
        baseStr.replace(/Güemes/gi, "Guemes"),
        withCity.replace(/Güemes/gi, "Guemes"),
        baseStr.replace(/\beste\b/gi, "Este"),
        withCity.replace(/\beste\b/gi, "Este"),
        norm(baseStr),
        norm(withCity),
      ];
      for (const cand of [...new Set(variants)]) {
        const cached = fromCacheSmart(cand);
        if (cached) return cached;
        try {
          const url = `https://nominatim.openstreetmap.org/search?format=json&limit=1&countrycodes=ar&q=${encodeURIComponent(cand)}`;
          const r = await fetch(url, { headers: { "Accept-Language": dict.acceptLang } });
          const j = await r.json();
          if (j?.[0]) {
            const loc = { lat: +j[0].lat, lng: +j[0].lon };
            try { localStorage.setItem("geo:" + norm(cand), JSON.stringify(loc)); } catch {}
            return loc;
          }
        } catch {}
      }
    } catch {}
    return { lat: -31.5375, lng: -68.521 };
  }

  function haversine(a, b) {
    const R = 6371, t = (x) => (x * Math.PI) / 180;
    const dLat = t(b.lat - a.lat), dLon = t(b.lng - a.lng), lat1 = t(a.lat), lat2 = t(b.lat);
    const s = Math.sin(dLat / 2) ** 2 + Math.cos(lat1) * Math.cos(lat2) * Math.sin(dLon / 2) ** 2;
    return 2 * R * Math.asin(Math.sqrt(s));
  }

  async function routeOSRM(a, b) {
    const r = await fetch(
      `https://router.project-osrm.org/route/v1/driving/${a.lng},${a.lat};${b.lng},${b.lat}?overview=full&geometries=geojson`
    );
    if (!r.ok) throw new Error("OSRM");
    const j = await r.json();
    const rt = j.routes?.[0];
    if (!rt) throw new Error("OSRM bad");
    return { distanceKm: rt.distance / 1000, durationMin: rt.duration / 60, geojson: rt.geometry };
  }

  /** Encadre robusto: si no hay POIs, vuelve al centro base */
  function updateView() {
    if (!map || !base) return;

    const points = [L.latLng(base.lat, base.lng)];
    markers.forEach((m) => points.push(m.getLatLng()));

    // bounds de todas las rutas activas
    try {
      const rb = routesGroup.getBounds();
      if (rb && rb.isValid()) {
        points.push(rb.getSouthWest(), rb.getNorthEast());
      }
    } catch {}

    if (points.length <= 1) {
      map.setView([base.lat, base.lng], INITIAL_ZOOM, { animate: true });
    } else {
      const b = L.latLngBounds(points).pad(0.15);
      map.fitBounds(b, { padding: [60, 60], maxZoom: 15, animate: true });
    }
  }

  const labelOf = (p) => p.labels?.[locale] ?? p.name;

  (async function init() {
    base = typeof fijo === "string" ? fromCacheSmart(fijo) : null;
    base ||= await geocodeSmart(fijo);
    if (!base || Number.isNaN(base.lat) || Number.isNaN(base.lng)) base = { lat: -31.5375, lng: -68.521 };

    map = L.map(mapId, {
      zoomControl: false,
      scrollWheelZoom: true,
      attributionControl: false,
    }).setView([base.lat, base.lng], INITIAL_ZOOM);

    L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", { maxZoom: 19 }).addTo(map);

    // grupo de rutas
    routesGroup.addTo(map);

    // marcador base con pulso y tooltip permanente
    const baseIcon = L.divIcon({
      className: "leaflet-div-icon base-marker",
      html: `<span class="ring-red" aria-hidden="true"></span><span class="dot" aria-hidden="true"></span>`,
      iconSize: [28, 28],
      iconAnchor: [14, 14],
    });

    L.marker([base.lat, base.lng], { icon: baseIcon, zIndexOffset: 1000 })
      .addTo(map)
      .bindTooltip(dict.base, { permanent: true, direction: "top", offset: [0, -12] });

    document.querySelectorAll(".chip[data-id]").forEach((btn) =>
      btn.addEventListener("click", () => toggle(btn))
    );

    // asegura layout correcto si se monta dentro de tabs/overlays
    setTimeout(() => map.invalidateSize(), 0);

    updateView();
  })();

  async function toggle(btn) {
    const id = btn.getAttribute("data-id");
    const place = lugares.find((l) => l.id === id);
    if (!place) return;

    // toggle y sincronizar todas las copias del chip
    const active = !btn.classList.contains("on");
    document.querySelectorAll(`.chip[data-id="${id}"]`).forEach((el) => {
      el.classList.toggle("on", active);
      el.setAttribute("aria-pressed", String(active));
    });

    // Si se desactiva: eliminar marker + capa y recalcular
    if (!active) {
      if (markers.has(id)) {
        map.removeLayer(markers.get(id));
        markers.delete(id);
      }
      if (layers.has(id)) {
        routesGroup.removeLayer(layers.get(id));
        map.removeLayer(layers.get(id));
        layers.delete(id);
      }
      updateView();
      return;
    }

    // Activar
    const dest =
      place.lat && place.lng
        ? { lat: place.lat, lng: place.lng }
        : place.query
        ? fromCacheSmart(place.query) || (await geocodeSmart(place.query))
        : null;
    if (!dest) return;

    const m = L.marker([dest.lat, dest.lng], { title: labelOf(place) }).addTo(map);
    markers.set(id, m);

    let text = labelOf(place);
    let rt = null;
    if (useRouting) rt = await routeOSRM(base, dest).catch(() => null);

    let layer; // 👈 importante para setear en el Map de capas

    if (rt && Number.isFinite(rt.distanceKm) && Number.isFinite(rt.durationMin)) {
      text += `<br><b>${rt.distanceKm.toFixed(1)} km</b> • ${Math.round(rt.durationMin)} ${dict.minApprox}`;
      layer = L.geoJSON(rt.geojson, { style: { color: brandColor, weight: 4, opacity: 0.95 } });
    } else {
      const km = haversine(base, dest);
      text += `<br><b>${km.toFixed(1)} ${dict.kmStraight}</b>`;
      layer = L.polyline(
        [
          [base.lat, base.lng],
          [dest.lat, dest.lng],
        ],
        { color: brandColor, weight: 3 }
      );
    }

    // agregar al grupo de rutas y registrar la capa
    routesGroup.addLayer(layer);
    layers.set(id, layer);

    updateView();
    m.bindPopup(text).openPopup();
  }

  // --- Mobile: botón y overlay ---
  const panel = document.getElementById("poi-panel");
  const poiBtn = document.querySelector(".poi-btn");
  const closeBtn = panel?.querySelector(".poi-close");
  const mapWrap = poiBtn?.closest(".map-wrap");

  if (mapWrap && poiBtn) {
    const io = new IntersectionObserver(
      ([e]) => {
        poiBtn.classList.toggle("show", e.isIntersecting && e.intersectionRatio > 0.15);
      },
      { threshold: [0, 0.15, 1] }
    );
    io.observe(mapWrap);
    requestAnimationFrame(() => {
      const r = mapWrap.getBoundingClientRect();
      poiBtn.classList.toggle("show", r.top < innerHeight && r.bottom > 0);
    });
  }

  function openPanel(open) {
    if (!panel) return;
    panel.classList.toggle("open", open);
    panel.setAttribute("aria-hidden", String(!open));
    if (open) panel.querySelector(".poi-search")?.focus();
    // evita glitches de tiles al abrir/cerrar overlay
    setTimeout(() => map?.invalidateSize(), 0);
  }
  poiBtn?.addEventListener("click", () => openPanel(!panel?.classList.contains("open")));
  closeBtn?.addEventListener("click", () => openPanel(false));
  addEventListener("keydown", (e) => {
    if (e.key === "Escape") openPanel(false);
  });
  panel?.addEventListener("click", (e) => {
    if (e.target === panel) openPanel(false);
    if (e.target.closest?.(".chip")) openPanel(false);
  });

  // Filtro (ambos buscadores)
  document.querySelectorAll(".poi-search").forEach((inp) => {
    inp.addEventListener("input", (e) => {
      const q = (e.target.value || "").toLowerCase();
      const scope = inp.closest(".poi-sidebar, .panel-inner, .poi-layout") || document;
      scope.querySelectorAll(".chip[data-id]").forEach((btn) => {
        const t = (btn.textContent || "").toLowerCase();
        btn.style.display = t.includes(q) ? "block" : "none";
      });
    });
  });
</script>

<style>
  :root {
    --neu-50: #f1f2f2;
    --neu-300: #d4d6d7;
    --neu-400: #a2a4a8;
    --neu-600: #373a3e;
  }

  /* chips comunes */
  .botonera {
    gap: 10px;
    margin: 0 0 8px 0;
  }
  .chip {
    appearance: none;
    cursor: pointer;
    font: inherit;
    border: 1px solid var(--neu-300);
    background: #fff;
    color: var(--neu-600);
    padding: 8px 12px;
    border-radius: 999px;
    transition:
      background 0.12s,
      color 0.12s,
      border-color 0.12s,
      box-shadow 0.12s,
      transform 0.02s;
  }
  .chip:hover {
    background: var(--neu-50);
    border-color: var(--neu-300);
  }
  .chip:active {
    transform: translateY(1px);
  }
  .chip:focus-visible {
    outline: 0;
    box-shadow: 0 0 0 2px color-mix(in lab, var(--brand) 35%, white);
    border-color: color-mix(in lab, var(--brand) 45%, var(--neu-300));
  }
  .chip.on {
    background: var(--brand);
    color: #fff;
    border-color: transparent;
  }

  /* mapa */
  .map-wrap {
    border-radius: 20px;
    overflow: hidden;
    background: #000;
    isolation: isolate;
    position: relative;
  }
  .map {
    width: 100%;
    height: var(--alto);
  }

  /* botón mobile */
  .poi-btn {
    position: absolute;
    top: 10px;
    left: 50%;
    transform: translateX(-50%);
    width: min(560px, calc(100% - 24px));
    padding: 10px 16px;
    border: 0;
    border-radius: 999px;
    text-align: center;
    background: var(--brand);
    color: #fff;
    font-weight: 700;
    box-shadow: 0 10px 24px rgba(0, 0, 0, 0.25);
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.15s;
    z-index: 1500;
  }
  .poi-btn.show {
    opacity: 1;
    pointer-events: auto;
  }

  /* mobile: overlay */
  @media (max-width: 767px) {
    .poi-panel {
      position: absolute;
      inset: 0;
      display: none;
      background: rgba(10, 10, 10, 0.45);
      backdrop-filter: blur(2px);
      z-index: 1400;
    }
    .poi-panel.open {
      display: block;
    }
    .panel-inner {
      position: absolute;
      top: 56px;
      left: 50%;
      transform: translateX(-50%);
      width: calc(100% - 16px);
      max-width: 900px;
      background: #fff;
      border-radius: 12px;
      padding: 10px;
      max-height: calc(100% - 64px);
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.35);
      display: flex;
      flex-direction: column;
      overflow: hidden;
    }
    .poi-header {
      position: sticky;
      top: 0;
      z-index: 2;
      background: #fff;
      display: flex;
      gap: 8px;
      align-items: center;
      padding-bottom: 6px;
      margin-bottom: 6px;
    }
    .poi-search {
      flex: 1;
      width: 100%;
      padding: 8px 10px;
      border: 1px solid var(--neu-300);
      border-radius: 10px;
    }
    .poi-close {
      appearance: none;
      border: 0;
      background: transparent;
      font-size: 24px;
      line-height: 1;
      padding: 2px 6px;
      cursor: pointer;
    }
    .poi-list {
      flex: 1;
      overflow-y: auto;
      display: block;
    }
    .poi-list .chip {
      display: block;
      width: 100%;
      text-align: left;
      margin-bottom: 8px;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }
  }

  /* desktop: 2 columnas */
  @media (min-width: 768px) {
    .poi-layout {
      display: grid;
      grid-template-columns: 360px 1fr;
      gap: 16px;
      align-items: start;
    }
    .poi-sidebar {
      height: var(--alto);
      background: #fff;
      border-radius: 12px;
      padding: 10px;
      box-shadow: 0 10px 24px rgba(0, 0, 0, 0.12);
      overflow: hidden;
    }
    .poi-sidebar .poi-header {
      position: sticky;
      top: 0;
      z-index: 2;
      background: #fff;
      display: flex;
      gap: 8px;
      align-items: center;
      padding-bottom: 6px;
      margin-bottom: 6px;
    }
    .poi-sidebar .poi-search {
      flex: 1;
      width: 100%;
      padding: 8px 10px;
      border: 1px solid var(--neu-300);
      border-radius: 10px;
    }
    .poi-sidebar .poi-list {
      height: calc(100% - 48px);
      overflow-y: auto;
      display: block;
    }
    .poi-sidebar .poi-list .chip {
      display: block;
      width: 100%;
      text-align: left;
      margin-bottom: 8px;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }
  }

  /* ocultar controles internos */
  .leaflet-control-attribution {
    display: none !important;
  }
  .leaflet-control-zoom {
    display: none !important;
  }

  .osm-credit {
    display: block;
    margin-top: 6px;
    font-size: 12px;
    color: #9ca3af;
    text-align: right;
  }

  /* marcador base con efecto pulso */
  .base-marker {
    position: relative;
  }
  .base-marker .dot {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    width: 12px;
    height: 12px;
    border-radius: 999px;
    background: var(--brand);
    border: 2px solid #fff;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
    pointer-events: none;
  }
  /* punto base (el centro) */
  .base-marker {
    position: relative;
  }
  .base-marker .dot {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    width: 12px;
    height: 12px;
    border-radius: 999px;
    background: var(--brand); /* tu color de marca */
    border: 2px solid #fff;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
    pointer-events: none;
  }

  /* anillo rojo pulsante */
  .base-marker .ring-red {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    width: 14px;
    height: 14px;
    border-radius: 9999px;
    border: 3px solid #dc2626; /* rojo */
    opacity: 0.85;
    animation: baseRing 1.6s ease-out infinite;
    box-shadow: 0 0 0 2px rgba(220, 38, 38, 0.15);
    pointer-events: none;
  }

  @keyframes baseRing {
    0% {
      transform: translate(-50%, -50%) scale(1);
      opacity: 0.85;
    }
    70% {
      transform: translate(-50%, -50%) scale(3.3);
      opacity: 0;
    }
    100% {
      opacity: 0;
    }
  }

  /* Respeta reducción de movimiento del SO */
  @media (prefers-reduced-motion: reduce) {
    .base-marker .ring-red {
      animation: none;
      opacity: 0.6;
    }
  }
</style>
<style is:global>
  /* limpiar el divIcon por defecto */
  .leaflet-div-icon.base-marker {
    background: transparent;
    border: 0;
  }

  /* punto base + anillo rojo pulsante */
  .base-marker {
    position: relative;
  }
  .base-marker .dot {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    width: 12px;
    height: 12px;
    border-radius: 999px;
    background: var(--brand);
    border: 2px solid #fff;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
    pointer-events: none;
  }
  .base-marker .ring-red {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    width: 14px;
    height: 14px;
    border-radius: 9999px;
    border: 3px solid #dc2626;
    opacity: 0.85;
    animation: baseRing 1.6s ease-out infinite;
    box-shadow: 0 0 0 2px rgba(220, 38, 38, 0.15);
    pointer-events: none;
  }
  @keyframes baseRing {
    0% {
      transform: translate(-50%, -50%) scale(1);
      opacity: 0.85;
    }
    70% {
      transform: translate(-50%, -50%) scale(3.3);
      opacity: 0;
    }
    100% {
      opacity: 0;
    }
  }
  @media (prefers-reduced-motion: reduce) {
    .base-marker .ring-red {
      animation: none;
      opacity: 0.6;
    }
  }
</style>
